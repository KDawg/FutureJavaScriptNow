{"version":3,"sources":["code/app.js","code/colors.js","code/user.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\nconsole.log('ES2015 R&D Suite Executing...');\nconsole.log('=================');\n\nTimeSucker();\nTimeSucker(100000);\nTimeSucker(1000000);\nReportTheSuck();\n\n\nfunction TimeSucker(howMuchSuck = 1000) {\n  // default values\n  performance.mark('ts:before');\n\n  let randomNumber = Math.random();\n  // scoped variable declaration\n\n  for (let i = 0; i < howMuchSuck; i++) {\n    Math.cos(randomNumber);\n    Math.sqrt(randomNumber);\n    Math.sin(randomNumber);\n  }\n\n  performance.mark('ts:after');\n  performance.measure('ts', 'ts:before', 'ts:after');\n}\n\n\nfunction ReportTheSuck() {\n  let measures = performance.getEntriesByType('measure');\n\n  console.log('ReportOnTimeSucker...');\n\n  measures.forEach((entry, index, allEntries) => {\n    // arrow syntax for anonymous function\n    console.log(`${entry.duration} ms of sucking`);\n    // string interpolation\n  });\n\n  console.log('=================');\n}\n","(function() {\n\n  let primary, secondary, allColors;\n\n  function setupColors() {\n    primary = ['red', 'green', 'blue'];\n    secondary = ['yellow', 'magenta', 'cyan'];\n\n    allColors = [...primary, 'white', 'black',...secondary];\n    // spread operator (spreading elements of an iterable collection)\n  }\n\n  function reportColors() {\n    console.log(`Let's include all of the colors: ${allColors}`);\n    console.log('=================');\n  }\n\n  setupColors();\n  reportColors();\n\n})();\n","class User {\n  // class\n  constructor(firstName = '', lastName = '', emailAddr = '') {\n    // default parameter values\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.emailAddress = emailAddr;\n    // class data members\n  }\n\n  get fullName() {\n    // typical getting accessor\n    let name = `${this.firstName} ${this.lastName} ${this.handle}`;\n    // string interpolation\n\n    return name;\n  }\n\n  get handle() {\n    // getter accessor\n    return this.twitterHandle || '';\n  }\n\n  get email() {\n    return this.emailAddress;\n  }\n  // no commas! W00T!\n\n  set handle(newHandle) {\n    // setter accessor\n    const TWITTER_PREFIX = '@';\n\n    this.twitterHandle = TWITTER_PREFIX + newHandle;\n  }\n\n  computeUID() {\n    // class function member\n    const MAX_VALUE = 65536;\n    // constant values\n    let uid = Math.random() * MAX_VALUE;\n\n    return uid;\n  }\n\n  accessControl() {\n    return 'limited';\n  }\n}\n\n\nvar newUser = new User('Vernon', 'Bear', 'vb@sabre.com');\nnewUser.handle = 'VernonTheBear';\n\nconsole.log(newUser.fullName);\nconsole.log(newUser.computeUID());\nconsole.log(newUser.accessControl());\n\nconsole.log('=================');\n\n\nclass SuperUser extends User {\n\n  // subclassing\n  constructor(...args) {\n    // rest operator\n    super(...args);\n    // superclass reference\n    console.log(`SuperUser!!! constructor sent ${args.length} arguments`);\n  }\n\n  accessControl() {\n    return 'sudo + all';\n  }\n\n  static createDefaultSuperUser() {\n    return new SuperUser();\n  }\n\n}\n\nvar newAdmin = new SuperUser('Nico', 'Vigo');\n\nconsole.log(newAdmin.fullName);\nconsole.log(newAdmin.computeUID());\nconsole.log(newAdmin.accessControl());\n\nconsole.log('=================');\n\n\nvar emptyAdmin = SuperUser.createDefaultSuperUser();\nconsole.log(emptyAdmin);\n\nconsole.log('=================');\n\n"]}